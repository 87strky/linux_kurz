1.mkdir -p projekt

2.cd projekt

3.wget https://raw.githubusercontent.com/ENGETO-Academy/Linux-public/main/files/pwlist.csv -O pwlist.csv

4.tr -d "\r" < pwlist.csv > pwlist_unix.csv

5.cut -d ',' -f 1 pwlist_unix.csv | sort | uniq -c > vysledek.txt

6.awk '{print $2, $1}' vysledek.txt > vysledek_formatted.txt

7.awk -F, '{ count = length($0) - length($1) - 1; if(count >= 8) counts[$1]++ } END { for (type in counts) print type, counts[type] }' pwlist_unix.csv | sort > min_length_count.txt

8.awk -F, '{ count = length($0) - length($1) - 1; rest = substr($0, length($1) + 2, count); if(rest ~ /[a-z]/) counts[$1]++ } END { for (type in counts) print type, counts[type] }' pwlist_unix.csv | sort > min_lower_count.txt

9.awk -F, '{ count = length($0) - length($1) - 1; rest = substr($0, length($1) + 2, count); if(rest ~ /[A-Z]/) counts[$1]++ } END { for (type in counts) print type, counts[type] }' pwlist_unix.csv | sort > min_upper_count.txt

10.awk -F, '{ count = length($0) - length($1) - 1; rest = substr($0, length($1) + 2, count); if(rest ~ /[0-9]/) counts[$1]++; else if(!(counts[$1])) counts[$1] = 0 } END { for (type in counts) print type, counts[type] }' pwlist_unix.csv | sort > min_digit_count.txt

11.awk -F, '{ count = length($0) - length($1) - 1; rest = substr($0, length($1) + 2, count); if(rest ~ /[!@#$%^&*(),.?":{}|<>]/) counts[$1]++; else if(!(counts[$1])) counts[$1] = 0 } END { for (type in counts) print type, counts[type] }' pwlist_unix.csv | sort > min_special_count.txt

12.awk -F, '{
  rest = substr($0, length($1) + 2);
  prefix = substr(rest, 1, 3);
  if(!prefixes[$1][prefix]++) counts[$1]++;
} END { for (type in counts) print type, counts[type] }' pwlist_unix.csv | sort > valid_prefix_count.txt


13.awk -F, '{
  rest = substr($0, length($1) + 2);
  suffix = substr(rest, length(rest)-2, 3);
  if(!suffixes[$1][suffix]++) counts[$1]++;
} END { for (type in counts) print type, counts[type] }' pwlist_unix.csv | sort > valid_suffix_count.txt




14.paste <(cut -d ' ' -f 1 vysledek_formatted.txt) \
      <(printf '%0.s ' $(seq $(wc -l < vysledek_formatted.txt))) \
      <(cut -d ' ' -f 2- vysledek_formatted.txt) \
      <(cut -d ' ' -f 2 min_length_count.txt) \
      <(cut -d ' ' -f 2 min_lower_count.txt) \
      <(cut -d ' ' -f 2 min_upper_count.txt) \
      <(cut -d ' ' -f 2 min_digit_count.txt) \
      <(cut -d ' ' -f 2 min_special_count.txt) \
      <(cut -d ' ' -f 2 valid_prefix_count.txt) \
      <(cut -d ' ' -f 2 valid_suffix_count.txt) | column -t > dohromady.txt


15. #!/bin/bash

# Jméno
echo "{ \"name\": \"Martin Odstrcil\"," > report.txt

# Aktuální datum a čas s explicitním nastavením časové zóny
echo "\"date\": \"$(TZ="Europe/Prague" date +"%d-%m-%Y/%H:%M")\"," >> report.txt

# Přidej výherce
echo "\"winner\": \"\"," >> report.txt

# Výsledky
echo "\"results\": {" >> report.txt

# Výstup pro výsledky
awk '{
  total_count = $2;
  score = 0;
  if (total_count < 50) {
    score = -1;
    printf "\"%s\": {\n  \"total_count\": %s,\n  \"min_length\": 0,\n  \"min_lower\": 0,\n  \"min_upper\": 0,\n  \"min_digit\": 0,\n  \"min_special\": 0,\n  \"valid_prefix\": 0,\n  \"valid_suffix\": 0,\n  \"score\": %d\n},\n", $1, total_count, score;
  } else {
    if (total_count == $3) score++;
    if (total_count == $4) score++;
    if (total_count == $5) score++;
    if (total_count == $6) score++;
    if (total_count == $7) score++;
    if (total_count == $8) score++;
    if (total_count == $9) score++;
    printf "\"%s\": {\n  \"total_count\": %s,\n  \"min_length\": %s,\n  \"min_lower\": %s,\n  \"min_upper\": %s,\n  \"min_digit\": %s,\n  \"min_special\": %s,\n  \"valid_prefix\": %s,\n  \"valid_suffix\": %s,\n  \"score\": %d\n},\n", $1, total_count, $3, $4, $5, $6, $7, $8, $9, score;
  }
}' dohromady.txt >> report.txt

# Odstraní poslední čárku a uzavře JSON strukturu
sed -i '$ s/},/}/' report.txt
echo "}}" >> report.txt
